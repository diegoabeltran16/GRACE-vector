# utils/formatter.py
"""
M√≥dulo `formatter` para GRACE-vector

Este m√≥dulo contiene funciones que genera un resumen textual del vector de identidad diario,
mostrando de forma clara y pedag√≥gica cada dimensi√≥n sin emitir juicios ni sugerencias.
"""

# Etiquetas legibles de cada dimensi√≥n para el usuario
DIMENSION_LABELS = {
    "G": "G√©nero",
    "R": "Relaciones",
    "A": "Aprendizaje cognitivo",
    "C": "Cuerpo",
    "E": "Experiencia personal"
}


def summarize_vector(entry: dict, states: dict) -> None:
    """
    Imprime en consola un resumen del estado diario de identidad basado en el vector GRACE.

    Par√°metros:
    - entry: diccionario con las claves 'G','R','A','C','E' y opcionalmente 'note'.
             Cada clave de dimensi√≥n (ej. 'G') tiene como valor un c√≥digo (ej. 'G3').
    - states: diccionario que asocia cada dimensi√≥n a un mapping de c√≥digos a etiquetas.

    El formato de salida es:
      - G (G√©nero): G3 ‚Äì Conectada
      - R (Relaciones): R2 ‚Äì Tensa
      ...
    Opcionalmente, muestra la nota si existe.
    """
    print()
    print("üìã Resumen simb√≥lico de tu vector de identidad:")
    # Recorrer cada dimensi√≥n en orden GRACE
    for dim in ["G", "R", "A", "C", "E"]:
        code = entry.get(dim)
        # Obtener etiqueta larga desde el archivo de estados
        label = states.get(dim, {}).get(code, "")
        # Nombre legible de la dimensi√≥n
        dim_label = DIMENSION_LABELS.get(dim, dim)
        # Formato pedag√≥gico y claro
        print(f"- {dim} ({dim_label}): {code} ‚Äì {label}")

    # Si el usuario a√±adi√≥ una nota, mostrarla abajo
    note = entry.get("note", "").strip()
    if note:
        print()
        print(f"üí¨ Nota del d√≠a: {note}")
